server {
    listen 80;

    server_name app.browseragent.dev;

    location ~ /.well-known/acme-challenge {
          allow all;
          root /var/www/html;
        }
    location / {
                rewrite ^ https://$host$request_uri? permanent;
        }
}

server {
    listen 80;

    server_name api.browseragent.dev;
    location ~ /.well-known/acme-challenge {
          allow all;
          root /var/www/html;
        }
    location / {
                rewrite ^ https://$host$request_uri? permanent;
        }
}

# Comment this part for first time setup, once the SSL is setup uncoment and run the webserver instance again

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;


        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        server_name app.browseragent.dev;

        server_tokens off;

        ssl_certificate /etc/ssl/cloudflare.crt;
        ssl_certificate_key /etc/ssl/cloudflare.pem;

        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;

        location / {
                add_header 'Referrer-Policy' 'same-origin';
                add_header 'SECURE_REFERRER_POLICY' 'strict-origin-when-cross-origin';
                add_header 'Access-Control-Allow-Origin' 'https://app.browseragent.dev' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                
                if ($request_method = 'OPTIONS') {
                    add_header 'Access-Control-Allow-Origin' 'https://app.browseragent.dev' always;
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                    add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
                    add_header 'Access-Control-Allow-Credentials' 'true' always;
                    add_header 'Content-Type' 'text/plain charset=UTF-8';
                    add_header 'Content-Length' 0;
                    return 204;
                }

                proxy_pass http://frontend:3000;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
        }
}

server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;


        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        server_name api.browseragent.dev;
        server_tokens off;

        ssl_certificate /etc/ssl/cloudflare.crt;
        ssl_certificate_key /etc/ssl/cloudflare.pem;
        
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;

        location / {
                proxy_hide_header 'Access-Control-Allow-Origin';
                proxy_hide_header 'Access-Control-Allow-Methods';
                proxy_hide_header 'Access-Control-Allow-Headers';
                proxy_hide_header 'Access-Control-Allow-Credentials';

                add_header 'Access-Control-Allow-Origin' 'https://app.browseragent.dev' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                
                if ($request_method = 'OPTIONS') {
                    return 204;
                }

                proxy_pass http://backend:8000;
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location ~ /.well-known/acme-challenge {
                allow all;
                root /var/www/html;
        }
}